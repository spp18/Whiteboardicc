{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/logger.ts","../src/cloudEventsDispatcher.ts","../src/webPubSubEventHandler.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { IncomingMessage } from \"http\";\n\nfunction isJsonObject(obj: any): boolean {\n  return obj && typeof obj === \"object\" && !Array.isArray(obj);\n}\n\nexport function toBase64JsonString(obj: Record<string, any>): string {\n  return Buffer.from(JSON.stringify(obj)).toString(\"base64\");\n}\n\nexport function fromBase64JsonString(base64String: string | undefined): Record<string, any> {\n  if (base64String === undefined) {\n    return {};\n  }\n\n  try {\n    const buf = Buffer.from(base64String, \"base64\").toString();\n    const parsed = JSON.parse(buf);\n    return isJsonObject(parsed) ? parsed : {};\n  } catch (e) {\n    console.warn(\"Unexpected state format:\" + e);\n    return {};\n  }\n}\n\nexport function getHttpHeader(req: IncomingMessage, key: string): string | undefined {\n  if (!key) return undefined;\n\n  // According to https://nodejs.org/api/http.html#http_class_http_incomingmessage, header names are always lower-cased\n  const value = req.headers[key.toLowerCase()];\n\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  return value[0];\n}\n\nexport function readRequestBody(req: IncomingMessage): Promise<Buffer> {\n  return new Promise(function (resolve, reject) {\n    const chunks: any = [];\n    req.on(\"data\", function (chunk) {\n      chunks.push(chunk);\n    });\n    req.on(\"end\", function () {\n      const buffer = Buffer.concat(chunks);\n      resolve(buffer);\n    });\n    // reject on request error\n    req.on(\"error\", function (err) {\n      // This is not a \"Second reject\", just a different sort of failure\n      reject(err);\n    });\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The \\@azure/logger configuration for this package.\n *\n * @internal\n */\nexport const logger = createClientLogger(\"web-pubsub-express\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as utils from \"./utils\";\nimport { IncomingMessage, ServerResponse } from \"http\";\nimport { URL } from \"url\";\nimport { logger } from \"./logger\";\n\nimport {\n  ConnectRequest,\n  ConnectResponse,\n  ConnectedRequest,\n  ConnectionContext,\n  ConnectResponseHandler,\n  DisconnectedRequest,\n  UserEventRequest,\n  UserEventResponseHandler,\n  WebPubSubEventHandlerOptions,\n} from \"./cloudEventsProtocols\";\n\nenum EventType {\n  Connect,\n  Connected,\n  Disconnected,\n  UserEvent,\n}\n\nfunction getConnectResponseHandler(\n  connectRequest: ConnectRequest,\n  response: ServerResponse\n): ConnectResponseHandler {\n  const states: Record<string, any> = connectRequest.context.states;\n  let modified = false;\n  const handler = {\n    setState(name: string, value: unknown): void {\n      states[name] = value;\n      modified = true;\n    },\n    success(res?: ConnectResponse): void {\n      response.statusCode = 200;\n      if (modified) {\n        response.setHeader(\"ce-connectionState\", utils.toBase64JsonString(states));\n      }\n      if (res === undefined) {\n        response.end();\n      } else {\n        response.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n        response.end(JSON.stringify(res));\n      }\n    },\n    fail(code: 400 | 401 | 500, detail?: string): void {\n      response.statusCode = code;\n      response.end(detail ?? \"\");\n    },\n  };\n\n  return handler;\n}\n\nfunction getUserEventResponseHandler(\n  userRequest: UserEventRequest,\n  response: ServerResponse\n): UserEventResponseHandler {\n  const states: Record<string, any> = userRequest.context.states;\n  let modified = false;\n  const handler = {\n    setState(name: string, value: unknown): void {\n      modified = true;\n      states[name] = value;\n    },\n    success(data?: string | ArrayBuffer, dataType?: \"binary\" | \"text\" | \"json\"): void {\n      response.statusCode = 200;\n      if (modified) {\n        response.setHeader(\"ce-connectionState\", utils.toBase64JsonString(states));\n      }\n\n      switch (dataType) {\n        case \"json\":\n          response.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n          break;\n        case \"text\":\n          response.setHeader(\"Content-Type\", \"text/plain; charset=utf-8\");\n          break;\n        default:\n          response.setHeader(\"Content-Type\", \"application/octet-stream\");\n          break;\n      }\n      response.end(data ?? \"\");\n    },\n    fail(code: 400 | 401 | 500, detail?: string): void {\n      response.statusCode = code;\n      response.end(detail ?? \"\");\n    },\n  };\n  return handler;\n}\n\nfunction getContext(request: IncomingMessage, origin: string): ConnectionContext {\n  const context = {\n    signature: utils.getHttpHeader(request, \"ce-signature\"),\n    userId: utils.getHttpHeader(request, \"ce-userid\"),\n    hub: utils.getHttpHeader(request, \"ce-hub\")!,\n    connectionId: utils.getHttpHeader(request, \"ce-connectionid\")!,\n    eventName: utils.getHttpHeader(request, \"ce-eventname\")!,\n    origin: origin,\n    states: utils.fromBase64JsonString(utils.getHttpHeader(request, \"ce-connectionstate\")),\n  };\n\n  // TODO: validation\n  return context;\n}\n\nfunction tryGetWebPubSubEvent(req: IncomingMessage): EventType | undefined {\n  // check ce-type to see if it is a valid WebPubSub CloudEvent request\n  const prefix = \"azure.webpubsub.\";\n  const connect = \"azure.webpubsub.sys.connect\";\n  const connected = \"azure.webpubsub.sys.connected\";\n  const disconnectd = \"azure.webpubsub.sys.disconnected\";\n  const userPrefix = \"azure.webpubsub.user.\";\n  const type = utils.getHttpHeader(req, \"ce-type\");\n  if (!type?.startsWith(prefix)) {\n    return undefined;\n  }\n  if (type.startsWith(userPrefix)) {\n    return EventType.UserEvent;\n  }\n  switch (type) {\n    case connect:\n      return EventType.Connect;\n    case connected:\n      return EventType.Connected;\n    case disconnectd:\n      return EventType.Disconnected;\n    default:\n      return undefined;\n  }\n}\n\nfunction isWebPubSubRequest(req: IncomingMessage): boolean {\n  return utils.getHttpHeader(req, \"ce-awpsversion\") !== undefined;\n}\n\nasync function readUserEventRequest(\n  request: IncomingMessage,\n  origin: string\n): Promise<UserEventRequest | undefined> {\n  const contentTypeheader = utils.getHttpHeader(request, \"content-type\");\n  if (contentTypeheader === undefined) {\n    return undefined;\n  }\n\n  const contentType = contentTypeheader.split(\";\")[0].trim();\n\n  switch (contentType) {\n    case \"application/octet-stream\":\n      return {\n        context: getContext(request, origin),\n        data: await utils.readRequestBody(request),\n        dataType: \"binary\",\n      };\n    case \"application/json\":\n      return {\n        context: getContext(request, origin),\n        data: JSON.parse((await utils.readRequestBody(request)).toString()),\n        dataType: \"json\",\n      };\n    case \"text/plain\":\n      return {\n        context: getContext(request, origin),\n        data: (await utils.readRequestBody(request)).toString(),\n        dataType: \"text\",\n      };\n    default:\n      return undefined;\n  }\n}\n\nasync function readSystemEventRequest<T extends { context: ConnectionContext }>(\n  request: IncomingMessage,\n  origin: string\n): Promise<T> {\n  const body = (await utils.readRequestBody(request)).toString();\n  const parsedRequest = JSON.parse(body) as T;\n  parsedRequest.context = getContext(request, origin);\n  return parsedRequest;\n}\n\n/**\n * @internal\n */\nexport class CloudEventsDispatcher {\n  private readonly _allowAll: boolean = true;\n  private readonly _allowedOrigins: Array<string> = [];\n  constructor(private hub: string, private eventHandler?: WebPubSubEventHandlerOptions) {\n    if (Array.isArray(eventHandler)) {\n      throw new Error(\"Unexpected WebPubSubEventHandlerOptions\");\n    }\n    if (eventHandler?.allowedEndpoints !== undefined) {\n      this._allowedOrigins = eventHandler.allowedEndpoints.map((endpoint) =>\n        new URL(endpoint).host.toLowerCase()\n      );\n      this._allowAll = false;\n    }\n  }\n\n  public handlePreflight(req: IncomingMessage, res: ServerResponse): boolean {\n    if (!isWebPubSubRequest(req)) {\n      return false;\n    }\n    const origin = utils.getHttpHeader(req, \"webhook-request-origin\")?.toLowerCase();\n\n    if (origin === undefined) {\n      logger.warning(\"Expecting webhook-request-origin header.\");\n      res.statusCode = 400;\n    } else if (this._allowAll || this._allowedOrigins.indexOf(origin!) > -1) {\n      res.setHeader(\"WebHook-Allowed-Origin\", origin!);\n    } else {\n      logger.warning(\"Origin does not match the allowed origins: \" + this._allowedOrigins);\n      res.statusCode = 400;\n    }\n\n    res.end();\n    return true;\n  }\n\n  public async handleRequest(request: IncomingMessage, response: ServerResponse): Promise<boolean> {\n    if (!isWebPubSubRequest(request)) {\n      return false;\n    }\n\n    // check if it is a valid WebPubSub cloud events\n    const origin = utils.getHttpHeader(request, \"webhook-request-origin\");\n    if (origin === undefined) {\n      return false;\n    }\n\n    const eventType = tryGetWebPubSubEvent(request);\n    if (eventType === undefined) {\n      return false;\n    }\n\n    // check if hub matches\n    const hub = utils.getHttpHeader(request, \"ce-hub\");\n    if (hub !== this.hub) {\n      return false;\n    }\n\n    // No need to read body if handler is not specified\n    switch (eventType) {\n      case EventType.Connect:\n        if (!this.eventHandler?.handleConnect) {\n          response.end();\n          return true;\n        }\n        break;\n      case EventType.Connected:\n        if (!this.eventHandler?.onConnected) {\n          response.end();\n          return true;\n        }\n        break;\n      case EventType.Disconnected:\n        if (!this.eventHandler?.onDisconnected) {\n          response.end();\n          return true;\n        }\n        break;\n      case EventType.UserEvent:\n        if (!this.eventHandler?.handleUserEvent) {\n          response.end();\n          return true;\n        }\n        break;\n      default:\n        logger.warning(`Unknown EventType ${eventType}`);\n        return false;\n    }\n\n    switch (eventType) {\n      case EventType.Connect: {\n        const connectRequest = await readSystemEventRequest<ConnectRequest>(request, origin);\n        logger.verbose(connectRequest);\n\n        this.eventHandler.handleConnect!(\n          connectRequest,\n          getConnectResponseHandler(connectRequest, response)\n        );\n        return true;\n      }\n      case EventType.Connected: {\n        // for unblocking events, we responds to the service as early as possible\n        response.end();\n        const connectedRequest = await readSystemEventRequest<ConnectedRequest>(request, origin);\n        logger.verbose(connectedRequest);\n        this.eventHandler.onConnected!(connectedRequest);\n        return true;\n      }\n      case EventType.Disconnected: {\n        // for unblocking events, we responds to the service as early as possible\n        response.end();\n        const disconnectedRequest = await readSystemEventRequest<DisconnectedRequest>(\n          request,\n          origin\n        );\n        logger.verbose(disconnectedRequest);\n        this.eventHandler.onDisconnected!(disconnectedRequest);\n        return true;\n      }\n      case EventType.UserEvent: {\n        const userRequest = await readUserEventRequest(request, origin);\n        if (userRequest === undefined) {\n          logger.warning(\n            `Unsupported content type ${utils.getHttpHeader(request, \"content-type\")}`\n          );\n          return false;\n        }\n        logger.verbose(userRequest);\n        this.eventHandler.handleUserEvent!(\n          userRequest,\n          getUserEventResponseHandler(userRequest, response)\n        );\n        return true;\n      }\n      default:\n        logger.warning(`Unknown EventType ${eventType}`);\n        return false;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport express from \"express-serve-static-core\";\n\nimport { CloudEventsDispatcher } from \"./cloudEventsDispatcher\";\nimport { WebPubSubEventHandlerOptions } from \"./cloudEventsProtocols\";\n\n/**\n * The handler to handle incoming CloudEvents messages\n */\nexport class WebPubSubEventHandler {\n  /**\n   * The path this CloudEvents handler listens to\n   */\n  public readonly path: string;\n\n  private _cloudEventsHandler: CloudEventsDispatcher;\n\n  /**\n   * Creates an instance of a WebPubSubEventHandler for handling incoming CloudEvents messages.\n   *\n   * Example usage:\n   * ```ts\n   * import express from \"express\";\n   * import { WebPubSubEventHandler } from \"@azure/web-pubsub-express\";\n   * const endpoint = \"https://xxxx.webpubsubdev.azure.com\"\n   * const handler = new WebPubSubEventHandler('chat', {\n   *   handleConnect: (req, res) => {\n   *     console.log(JSON.stringify(req));\n   *     return {};\n   *   },\n   *   onConnected: req => {\n   *     console.log(JSON.stringify(req));\n   *   },\n   *   handleUserEvent: (req, res) => {\n   *     console.log(JSON.stringify(req));\n   *     res.success(\"Hey \" + req.data, req.dataType);\n   *    };\n   *   allowedEndpoints: [ endpoint ]\n   *  },\n   * });\n   * ```\n   *\n   * @param hub - The name of the hub to listen to\n   * @param options - Options to configure the event handler\n   */\n  constructor(private hub: string, options?: WebPubSubEventHandlerOptions) {\n    const path = (options?.path ?? `/api/webpubsub/hubs/${hub}/`).toLowerCase();\n    this.path = path.endsWith(\"/\") ? path : path + \"/\";\n    this._cloudEventsHandler = new CloudEventsDispatcher(this.hub, options);\n  }\n\n  /**\n   * Get the middleware to process the CloudEvents requests\n   */\n  public getMiddleware(): express.RequestHandler {\n    return async (\n      req: express.Request,\n      res: express.Response,\n      next: express.NextFunction\n    ): Promise<void> => {\n      // Request originalUrl can contain query while baseUrl + path not\n      let requestUrl = (req.baseUrl + req.path).toLowerCase();\n\n      // normalize the Url\n      requestUrl = requestUrl.endsWith(\"/\") ? requestUrl : requestUrl + \"/\";\n      if (requestUrl.startsWith(this.path)) {\n        if (req.method === \"OPTIONS\") {\n          if (this._cloudEventsHandler.handlePreflight(req, res)) {\n            return;\n          }\n        } else if (req.method === \"POST\") {\n          try {\n            if (await this._cloudEventsHandler.handleRequest(req, res)) {\n              return;\n            }\n          } catch (err) {\n            next(err);\n            return;\n          }\n        }\n      }\n\n      next();\n    };\n  }\n}\n"],"names":["createClientLogger","utils.toBase64JsonString","utils.getHttpHeader","utils.fromBase64JsonString","utils.readRequestBody","URL"],"mappings":"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"}