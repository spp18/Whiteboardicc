{"version":3,"file":"hubs.spec.js","sourceRoot":"","sources":["../../test/hubs.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable no-invalid-this */\nimport { env, Recorder, record, isLiveMode } from \"@azure-tools/test-recorder\";\nimport { WebPubSubServiceClient, AzureKeyCredential } from \"../src\";\nimport { assert } from \"chai\";\nimport environmentSetup from \"./testEnv\";\nimport { FullOperationResponse } from \"@azure/core-client\";\nimport { DefaultAzureCredential } from \"@azure/identity\";\n/* eslint-disable @typescript-eslint/no-invalid-this */\n\ndescribe(\"HubClient\", function() {\n  let recorder: Recorder;\n  beforeEach(function() {\n    recorder = record(this, environmentSetup);\n  });\n\n  afterEach(async function() {\n    if (recorder) {\n      await recorder.stop();\n    }\n  });\n\n  describe(\"Constructing a HubClient\", () => {\n    it(\"takes a connection string, hub name, and options\", () => {\n      assert.doesNotThrow(() => {\n        new WebPubSubServiceClient(env.WPS_CONNECTION_STRING, \"test-hub\", {\n          retryOptions: { maxRetries: 2 }\n        });\n      });\n    });\n\n    it(\"takes an endpoint, an API key, a hub name, and options\", () => {\n      assert.doesNotThrow(() => {\n        new WebPubSubServiceClient(\n          env.ENDPOINT,\n          new AzureKeyCredential(env.WPS_API_KEY),\n          \"test-hub\",\n          {\n            retryOptions: { maxRetries: 2 }\n          }\n        );\n      });\n    });\n\n    it(\"takes an endpoint, DefaultAzureCredential, a hub name, and options\", () => {\n      assert.doesNotThrow(() => {\n        new WebPubSubServiceClient(env.ENDPOINT, new DefaultAzureCredential(), \"test-hub\", {\n          retryOptions: { maxRetries: 2 }\n        });\n      });\n    });\n  });\n\n  describe(\"Working with a hub\", function() {\n    let client: WebPubSubServiceClient;\n    let lastResponse: FullOperationResponse | undefined;\n    function onResponse(response: FullOperationResponse) {\n      lastResponse = response;\n    }\n    beforeEach(function() {\n      client = new WebPubSubServiceClient(env.WPS_CONNECTION_STRING, \"simplechat\");\n    });\n\n    it(\"can broadcast\", async () => {\n      await client.sendToAll(\"hello\", { contentType: \"text/plain\", onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      await client.sendToAll({ x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      const binaryMessage = new Uint8Array(10);\n      await client.sendToAll(binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can broadcast using the DAC\", async () => {\n      const dacClient = new WebPubSubServiceClient(\n        env.ENDPOINT,\n        new DefaultAzureCredential(),\n        \"simplechat\"\n      );\n\n      await dacClient.sendToAll(\"hello\", { contentType: \"text/plain\", onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      await dacClient.sendToAll({ x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      const binaryMessage = new Uint8Array(10);\n      await dacClient.sendToAll(binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can broadcast using APIM\", async () => {\n      const apimClient = new WebPubSubServiceClient(env.WPS_CONNECTION_STRING, \"simplechat\", {\n        reverseProxyEndpoint: env.REVERSE_PROXY_ENDPOINT\n      });\n\n      await apimClient.sendToAll(\"hello\", { contentType: \"text/plain\", onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      await apimClient.sendToAll({ x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      const binaryMessage = new Uint8Array(10);\n      await apimClient.sendToAll(binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can send messages to a user\", async () => {\n      await client.sendToUser(\"brian\", \"hello\", {\n        contentType: \"text/plain\",\n        onResponse\n      });\n      assert.equal(lastResponse?.status, 202);\n\n      await client.sendToUser(\"brian\", { x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      const binaryMessage = new Uint8Array(10);\n      await client.sendToUser(\"brian\", binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    it(\"can send messages to a connection\", async () => {\n      await client.sendToConnection(\"xxxx\", \"hello\", { contentType: \"text/plain\", onResponse });\n      assert.equal(lastResponse?.status, 202);\n\n      await client.sendToConnection(\"xxxx\", { x: 1, y: 2 }, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n      const binaryMessage = new Uint8Array(10);\n\n      await client.sendToConnection(\"xxxx\", binaryMessage.buffer, { onResponse });\n      assert.equal(lastResponse?.status, 202);\n    });\n\n    // `removeUserFromAllGroups` always times out.\n    it.skip(\"can manage users\", async () => {\n      this.timeout(Infinity);\n      const res = await client.userExists(\"foo\");\n      assert.ok(!res);\n      await client.removeUserFromAllGroups(\"brian\", { onResponse });\n      assert.equal(lastResponse?.status, 200);\n    });\n\n    it(\"can check if a connection exists\", async function() {\n      // likely bug in recorder for this test - recording not generating properly\n      if (!isLiveMode()) this.skip();\n      const res = await client.connectionExists(\"xxx\");\n      assert.ok(!res);\n    });\n\n    it(\"can grant permissions to connections\", async () => {\n      let error;\n      try {\n        await client.grantPermission(\"xxx\", \"joinLeaveGroup\", { targetName: \"x\" });\n      } catch (e) {\n        error = e;\n      }\n      // grantPermission validates connection ids, so we expect an error here.\n      assert.equal(error.statusCode, 404);\n    });\n\n    it(\"can revoke permissions from connections\", async function() {\n      // likely bug in recorder for this test - recording not generating properly\n      if (!isLiveMode()) this.skip();\n      let error;\n      try {\n        await client.revokePermission(\"xxx\", \"joinLeaveGroup\", { targetName: \"x\" });\n      } catch (e) {\n        error = e;\n      }\n      // grantPermission validates connection ids, so we expect an error here.\n      assert.equal(error.statusCode, 404);\n    });\n\n    // service API doesn't work yet.\n    it.skip(\"can generate client tokens\", async () => {\n      await client.getClientAccessToken({\n        userId: \"brian\"\n      });\n    });\n  });\n});\n"]}